<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="plone">
  <head><title></title></head>
  <body>
    <metal:view_macro define-macro="view">
        <span id="specwidget"
              tal:define="categories python:widget.getCategories(field, allservices=False);
                         specs widget/getResultsRangeDict;
                         spec_categories python:widget.getSpecCategories(field)">
          <table class="listing nosort">
            <tal:repeat repeat="category python:categories.keys()">
              <tal:define define="services python:categories[category]">
                <tr tal:condition="python:len(services)>0">
                  <th tal:content="category"/>
                  <th/>
                  <th/>
                </tr>
                <tbody>
                  <tal:block tal:repeat="service services">
                    <tr tal:condition="python:service.UID() in specs.keys()">
                      <td tal:content="service/Title"/>
                      <td tal:content="python:'between %s and %s'%(specs[service.UID()]['min'],specs[service.UID()]['max'])"/>
                      <td tal:content="python:specs[service.UID()]['error']"/>
                    </tr>
                  </tal:block>
                </tbody>
              </tal:define>
            </tal:repeat>
          </table>
        </span>
    </metal:view_macro>

    <metal:edit_macro define-macro="edit">
      <metal:use use-macro="field_macro | context/widgets/field/macros/edit">
        <metal:body_macro fill-slot="widget_body">
          <span id="specwidget"
                tal:define="categories python:widget.getCategories(field);
                            spec_categories python:widget.getSpecCategories(field)">
            <table class="listing nosort">
              <tal:repeat repeat="category python:categories.keys()">
                <thead>
                  <tr tal:attributes="
                          class python:category in [sc['Title'] for sc in spec_categories] and 'initial prefill' or 'initial';
                          name python:widget.getCategoryUID(category);
                          id field/getName;">
                    <th tal:content="category"/>
                    <th><span tal:attributes="id python:'min_hdr_%s'%(widget.getCategoryUID(category))">&nbsp;</span></th>
                    <th><span tal:attributes="id python:'max_hdr_%s'%(widget.getCategoryUID(category))">&nbsp;</span></th>
                    <th><span tal:attributes="id python:'error_hdr_%s'%(widget.getCategoryUID(category))">&nbsp;</span></th>
                  </tr>
                </thead>
                <tbody tal:attributes="id python:widget.getCategoryUID(category)" class="analysisservices"/>
                <input type="hidden"
                       tal:attributes="value python:','.join([s['service'] for s in widget.getCategorySpecs(field, category)]);
                                       min python:','.join([s['min'] for s in widget.getCategorySpecs(field, category)]);
                                       max python:','.join([s['max'] for s in widget.getCategorySpecs(field, category)]);
                                       error python:','.join([s['error'] for s in widget.getCategorySpecs(field, category)]);
                                       id python:'selectedservices_%s'%(widget.getCategoryUID(category));
                                       name category"/>
                <input type="hidden"
                       tal:attributes="value python:','.join([s.UID for s in categories[category]]);
                                       name python:','.join([s.Title for s in categories[category]]);
                                       id python:'allservices_%s'%(widget.getCategoryUID(category));"/>
              </tal:repeat>
          </span>
        </metal:body_macro>
      </metal:use>
    </metal:edit_macro>
</body>
</html>
