<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<metal:block use-macro="context/global_defines/macros/defines" />

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      tal:attributes="lang default_language|default;
                      xml:lang default_language|default;"
      i18n:domain="bika"
      tal:define="portal_state context/@@plone_portal_state;
                  portal_url portal_state/portal_url;
                  plone_view context/@@plone;">

<head>
<title>Sample sticker</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"
          tal:define="charset site_properties/default_charset|string:utf-8"
          tal:attributes="content string:text/html;;charset=${charset}" />

    <!-- Column style sheet. -->
    <style type="text/css" media="all" tal:condition="exists: portal/ploneColumns.css"
           tal:content="string:@import url($portal_url/ploneColumns.css);">
    </style>

    <!-- Main style sheets for CSS2 capable browsers -->
    <style type="text/css" media="screen"
           tal:content="string: @import url($portal_url/plone.css);">
    </style>

    <!-- Old style sheet from Plone 1.0, remove tal:condition="nothing" if you need to use the old styles.
         Will be removed in Plone 2.1. -->
    <style type="text/css" media="screen"
           tal:condition="nothing"
           tal:content="string: @import url($portal_url/ploneDeprecated.css);">
    </style>

    <!-- Alternate style sheets for the bigger/smaller text switcher -->
    <link rel="alternate stylesheet" type="text/css" media="screen" href="" tal:attributes="href string:$portal_url/ploneTextSmall.css" title="Small Text" />
    <link rel="alternate stylesheet" type="text/css" media="screen" href="" tal:attributes="href string:$portal_url/ploneTextLarge.css" title="Large Text" />

    <!-- Custom style sheet if available -->
    <style type="text/css" media="all" tal:condition="exists: portal/ploneCustom.css"
           tal:content="string:@import url($portal_url/ploneCustom.css);">
    </style>

    <!-- Style sheet used for printing -->
    <link rel="stylesheet" type="text/css" media="print" href=""
          tal:attributes="href string:$portal_url/plonePrint.css" />

    <!-- Internet Explorer CSS Fixes -->
    <tal:iefixstart replace="structure string:&lt;!--[if IE]&gt;" />
    <style type="text/css" media="all" tal:condition="exists: portal/ploneIEFixes.css"
           tal:content="string:@import url($portal_url/ploneIEFixes.css);">
    </style>
    <tal:iefixend replace="structure string:&lt;![endif]--&gt;" />

</head>

<body style="margin: 0; padding: 0">

<metal:block define-macro="sticker">
<style type="text/css">
table {
    border-collapse:collapse;
    margin: 1px 1px 1px 1px;
    font-size: 5pt
}
th {
    text-align: left;
    text-transform: none;
    border: 1pt solid black
}
td {
    border: 1pt solid black
}
</style>

<table cellpadding="3" cellspacing="0"
    tal:define="
                sample       python:context;
                ars          python:sample.getAnalysisRequests();
                analyses     python:(len(ars) > 0) and ars[0].getAnalyses(full_objects=1) or [];
                samplepoint  sample/getSamplePoint;
                sampletype   sample/getSampleType;
                preservation python:'';
                prescats     python:();
                container    python:{'Title':''};
                matrix       python:'';
                composite    sample/getComposite;
                deviation    python:'';
                ">
<!--                deviation    sample/getSamplingDeviation;-->
<!--                preservation python:context.getPreservation();-->
<!--                prescats     python:modules['Products.BikaWater.config'].PR_CATEGORIES;-->
<!--                container    python:context.getContainer();-->
<!--                matrix       sampletype/getMatrix-->

<thead>

<tr>
<th i18n:translate="label_sticker_sample_id">Sample ID</th>
<td><strong tal:content="sample/getSampleID">S-0001</strong></td>
<th i18n:translate="label_sticker_hazardous">Hazardous</th>
<td tal:content="sampletype/getHazardous|nothing">yes</td>
</tr>

<tr>
<th i18n:translate="label_sticker_deviation">Deviation</th>
<td tal:content="deviation/Title|nothing">R-0001</td>
<th i18n:translate="label_sticker_composite">Composite</th>
<td class="left" tal:content="composite">true</td>
</tr>

<tr>
<th i18n:translate="label_sticker_container">Container</th>
<td tal:content="container/Title">Glass</td>
<th i18n:translate="label_preservation">Preservation</th>
<td tal:content="python: preservation and '%s: %s' % (prescats.getValue(preservation.getCategory()), preservation.Title()) or 'None'">Acid</td>
</tr>

<tr>
<th i18n:translate="label_sticker_sample_type">Sample Type</th>
<td colspan='3' tal:content="sampletype/Title|nothing">Effluent</td>
</tr>

<tr>
<th i18n:translate="label_samplepoint">Sample Point</th>
<td colspan='3' tal:content="python:samplepoint and (samplepoint.Title() + ': ' + samplepoint.getSamplePointDescription()) or ''">Water</td>
</tr>

<tr>
<th colspan=4 i18n:translate="label_sticker_field_analyses">Field Analyses:</th>
</tr>

<tal:block repeat="analysis python:[analysis for analysis in analyses if analysis.getService().getCategory()=='f']">
   <tr>
      <td colspan=4 tal:content="python:analysis.getService().Title()">copper</td>
   </tr>
</tal:block>

</thead>

</table>
</metal:block>

</body>

</html>
